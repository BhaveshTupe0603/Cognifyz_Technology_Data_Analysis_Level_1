# -*- coding: utf-8 -*-
"""Cognifyz Technologies Data Analysis Level 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12mJAz_Ti3Kt9c7g0GWzS5w5Gv1TFtvPH

# **Level 1 – Task 1: Top Cuisines**


---


In this task, we aim to analyze the types of cuisines served across restaurants
in the dataset. The goal is to:

*   Identify the top three most common cuisines served by restaurants.
*   Calculate the percentage of restaurants that offer each of these top cuisines.
This kind of analysis helps understand customer preferences and market trends, which is valuable for restaurant chains, food delivery platforms, and urban planners working on food infrastructure.
"""

import pandas as pd

df = pd.read_csv('/content/drive/MyDrive/Dataset.csv')

df.head()

df['Cuisines'].head()

cuisine_series = df['Cuisines'].dropna().str.split(', ').explode()

top_cuisines = cuisine_series.value_counts().head(3)
print("Top 3 Cuisines:\n", top_cuisines)

total_restaurants = df.shape[0]

percentages = (top_cuisines / total_restaurants) * 100
print("\nPercentage of Restaurants Serving Top Cuisines:\n", percentages.round(2))

import matplotlib.pyplot as plt
import seaborn as sns

sns.set(style="whitegrid")


labels = ['North Indian', 'Chinese', 'Fast Food']
sizes = [41.46, 28.64, 20.79]
colors = sns.color_palette("pastel")[0:3]


plt.figure(figsize=(8, 6))
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140, wedgeprops={'edgecolor': 'black'})
plt.title('Top 3 Cuisines Served by Restaurants', fontsize=14)
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.show()

"""# **Level 1 – Task 2: City Analysis**


---


In this task, we will perform an analysis of restaurant distribution and ratings across cities. Specifically, we aim to:


*   Identify the city with the highest number of restaurants.
*   Determine the city with the highest average restaurant rating.


This analysis provides insights into geographic trends in the restaurant industry, which can help in expansion strategies and targeted marketing.


"""

print(df.columns)

df['City'] = df['City'].fillna('Unknown')
df['Aggregate rating'] = pd.to_numeric(df['Aggregate rating'], errors='coerce')

city_counts = df['City'].value_counts()
top_city = city_counts.idxmax()
print(f"City with the highest number of restaurants: {top_city} ({city_counts.max()} restaurants)")

avg_rating_by_city = df.groupby('City')['Aggregate rating'].mean().sort_values(ascending=False)
print("\nAverage Ratings by City:\n", avg_rating_by_city)

avg_rating_by_city = df.groupby('City')['Aggregate rating'].mean().sort_values(ascending=False)
print("\nAverage Ratings by City:\n", avg_rating_by_city)

top_avg_rating_city = avg_rating_by_city.idxmax()
print(f"\nCity with the highest average rating: {top_avg_rating_city} ({avg_rating_by_city.max():.2f})")

import seaborn as sns
import matplotlib.pyplot as plt

city_counts = df['City'].value_counts()
top_10_cities = city_counts.head(10)

plt.figure(figsize=(10, 6))
barplot = sns.barplot(x=top_10_cities.values, y=top_10_cities.index, color='mediumseagreen')

plt.xlabel("Number of Restaurants")
plt.ylabel("City")
plt.title("Top 10 Cities by Number of Restaurants")

# Display count values on bars
for i, value in enumerate(top_10_cities.values):
    plt.text(value + 1, i, str(value), va='center', fontsize=10)

plt.show()

"""# **Level 1 – Task 3: Price Range Distribution**


---

In this task, we will:


*   Visualize the distribution of restaurants across different price ranges using a histogram or bar chart.
*   Calculate the percentage of restaurants that fall into each price range category

This helps us understand how restaurants are priced and where most options lie, which can be useful for market segmentation and customer targeting.
"""

import matplotlib.pyplot as plt
import seaborn as sns

print("Price Range categories:", df['Price range'].unique())

price_counts = df['Price range'].value_counts().sort_index()

price_percent = (price_counts / price_counts.sum()) * 100
print("Percentage of restaurants by price range:\n", price_percent)

plt.figure(figsize=(8, 5))
palette = sns.color_palette("pastel", n_colors=len(price_counts))
sns.barplot(x=price_counts.index, y=price_counts.values, palette=palette)

plt.xlabel('Price Range')
plt.ylabel('Number of Restaurants')
plt.title('Distribution of Restaurants by Price Range')

# Display percentage labels on top of bars
for i, count in enumerate(price_counts.values):
    plt.text(i, count + 5, f'{price_percent.values[i]:.2f}%', ha='center')

plt.show()